#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Sep 24, 2021 12:02:21 AM -03  platform: Linux

import sys
from lunespy.client.wallet import Account

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import lunesdev_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    lunesdev_support.set_Tk_var()
    top = Wallet (root)
    lunesdev_support.init(root, top)
    root.mainloop()

w = None
def create_Wallet(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Wallet(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    lunesdev_support.set_Tk_var()
    top = Wallet (w)
    lunesdev_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Wallet():
    global w
    w.destroy()
    w = None

class Wallet:
    def generate_wallet(self):
        wallet = {
        'private_key': self.private_key.get(1.0, 'end'),
        'public_key': self.public_key.get(1.0, 'end'),
        'chain': 'mainnet' if lunesdev_support.network.get() else 'testnet',
        'address': self.address.get(1.0, 'end'),
        'nonce': lunesdev_support.nonce.get(),
        'seed': self.seed.get(1.0, 'end')
        }
        self.new_wallet = Account()
        print(self.new_wallet)
        lunesdev_support.wallet.set(self.new_wallet.__repr__())

    def export_wallet(self):
        self.new_wallet.to_json()

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("643x527")
        top.minsize(1, 1)
        top.maxsize(2865, 870)
        top.resizable(1,  1)
        top.title("lunesdev")
        top.configure(relief="groove")
        top.configure(highlightcolor="black")

        self.seed = tk.Text(top)
        self.seed.place(relx=0.016, rely=0.059, relheight=0.083, relwidth=0.734)
        self.seed.configure(background="white")
        self.seed.configure(font="-family {DejaVu Sans} -size 10")
        self.seed.configure(selectbackground="blue")
        self.seed.configure(selectforeground="white")
        self.seed.configure(wrap="word")

        self.private_key = tk.Text(top)
        self.private_key.place(relx=0.016, rely=0.19, relheight=0.051
                , relwidth=0.625)
        self.private_key.configure(background="white")
        self.private_key.configure(font="-family {DejaVu Sans} -size 10")
        self.private_key.configure(selectbackground="blue")
        self.private_key.configure(selectforeground="white")
        self.private_key.configure(wrap="word")

        self.public_key = tk.Text(top)
        self.public_key.place(relx=0.016, rely=0.285, relheight=0.051
                , relwidth=0.627)
        self.public_key.configure(background="white")
        self.public_key.configure(font="-family {DejaVu Sans} -size 10")
        self.public_key.configure(selectbackground="blue")
        self.public_key.configure(selectforeground="white")
        self.public_key.configure(wrap="word")

        self.address = tk.Text(top)
        self.address.place(relx=0.016, rely=0.38, relheight=0.051
                , relwidth=0.468)
        self.address.configure(background="white")
        self.address.configure(font="TkTextFont")
        self.address.configure(selectbackground="blue")
        self.address.configure(selectforeground="white")
        self.address.configure(wrap="word")

        self.nonce = tk.Spinbox(top, from_=0.0, to=1000000.0)
        self.nonce.place(relx=0.778, rely=0.059, relheight=0.083, relwidth=0.187)

        self.nonce.configure(activebackground="#f9f9f9")
        self.nonce.configure(background="white")
        self.nonce.configure(font="-family {DejaVu Sans} -size 20 -weight bold")
        self.nonce.configure(highlightbackground="black")
        self.nonce.configure(selectbackground="blue")
        self.nonce.configure(selectforeground="white")
        self.nonce.configure(textvariable=lunesdev_support.nonce)

        self.generate = tk.Button(top)
        self.generate.place(relx=0.653, rely=0.19, height=123, width=203)
        self.generate.configure(activebackground="#f9f9f9")
        self.generate.configure(borderwidth="2")
        self.generate.configure(text='''Generate Wallet''')
        self.generate.configure(command=self.generate_wallet)

        self.wallet = tk.Label(top)
        self.wallet.place(relx=0.016, rely=0.455, height=230, width=612)
        self.wallet.configure(activebackground="#f9f9f9")
        self.wallet.configure(anchor='nw')
        self.wallet.configure(font="-family {DejaVu Sans} -size 10")
        self.wallet.configure(justify='left')
        self.wallet.configure(relief="sunken")
        self.wallet.configure(takefocus="")
        self.wallet.configure(text='''wallet''')
        self.wallet.configure(textvariable=lunesdev_support.wallet)
        self.wallet.configure(wraplength="612")

        self.export = tk.Button(top)
        self.export.place(relx=0.016, rely=0.892, height=33, width=613)
        self.export.configure(activebackground="#f9f9f9")
        self.export.configure(borderwidth="2")
        self.export.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.export.configure(text='''export wallet to .json''')
        self.export.configure(command=self.export_wallet)

        self.mainnet = tk.Checkbutton(top)
        self.mainnet.place(relx=0.482, rely=0.38, relheight=0.044
                , relwidth=0.151)
        self.mainnet.configure(activebackground="#f9f9f9")
        self.mainnet.configure(justify='left')
        self.mainnet.configure(text='''mainnet''')
        self.mainnet.configure(variable=lunesdev_support.network)

        self.seed_label = tk.Label(top)
        self.seed_label.place(relx=0.016, rely=0.019, height=21, width=50)
        self.seed_label.configure(activebackground="#f9f9f9")
        self.seed_label.configure(anchor='nw')
        self.seed_label.configure(justify='left')
        self.seed_label.configure(text='''seed''')

        self.private_key_label = tk.Label(top)
        self.private_key_label.place(relx=0.016, rely=0.152, height=21, width=90)

        self.private_key_label.configure(activebackground="#f9f9f9")
        self.private_key_label.configure(anchor='nw')
        self.private_key_label.configure(justify='left')
        self.private_key_label.configure(text='''private key''')

        self.public_key_label = tk.Label(top)
        self.public_key_label.place(relx=0.016, rely=0.247, height=21, width=80)
        self.public_key_label.configure(activebackground="#f9f9f9")
        self.public_key_label.configure(anchor='nw')
        self.public_key_label.configure(justify='left')
        self.public_key_label.configure(text='''public key''')

        self.address_label = tk.Label(top)
        self.address_label.place(relx=0.016, rely=0.342, height=21, width=70)
        self.address_label.configure(activebackground="#f9f9f9")
        self.address_label.configure(anchor='nw')
        self.address_label.configure(justify='left')
        self.address_label.configure(text='''address''')

        self.nonce_label = tk.Label(top)
        self.nonce_label.place(relx=0.778, rely=0.019, height=21, width=49)
        self.nonce_label.configure(activebackground="#f9f9f9")
        self.nonce_label.configure(anchor='nw')
        self.nonce_label.configure(justify='left')
        self.nonce_label.configure(text='''nonce''')

if __name__ == '__main__':
    vp_start_gui()





